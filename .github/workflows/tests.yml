on:
  workflow_call:
    inputs:
      python-version:
        required: false
        type: string
        default: "3.x"
      test-results-artifact-name:
        required: true
        type: string
      use-codecov:
        required: false
        type: boolean
        default: false
    secrets:
      codecov_token:
        required: false

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - id: install_dependencies
        uses: nicburgt/install-app-deps-composite-action@37f45e55427a8a21d025c2753f32c498c26bd193
      - name: Detect test framework (pytest or another)
        id: detect_test_framework
        run: |
          if [ "${{ steps.install_dependencies.outputs.install_method }}" == "poetry" ]; then
            # Check for pytest in poetry dependencies
            if poetry show | grep -q 'pytest'; then
              echo "pytest found as test framework"
              echo "{test_framework}={pytest}" >> "$GITHUB_OUTPUT"
            else
              echo "No pytest found, skipping running of tests"
            fi
          elif [ "${{ steps.install_dependencies.outputs.install_method }}" == "pip" ]; then
            # Check for pytest in requirements.txt
            if grep -q 'pytest' requirements.txt; then
              echo "pytest found as test framework"
              echo "{test_framework}={pytest}" >> "$GITHUB_OUTPUT"
            else
              echo "No pytest found, skipping running of tests"
            fi
          fi
      - name: Run Tests (poetry)
        if: steps.install_dependencies.outputs.install_method == 'poetry'
        run: |
          if [ "${{ steps.detect_test_framework.outputs.test_framework }}" == "pytest" ]; then
            poetry run python -m pytest --cov . --cov-report xml
          else
            echo "Skipping running tests through poetry as test framework was not specified"
          fi
      - name: Run Tests (pip)
        if: steps.install_dependencies.outputs.install_method == 'pip'
        run: |
          if [ "${{ steps.detect_test_framework.outputs.test_framework }}" == "pytest" ]; then
            python -m pytest --cov . --cov-report xml
          else
            echo "Skipping running tests through pip as test framework was not specified"
          fi
      - name: Upload test coverage xml as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.test-results-artifact-name }}
          path: coverage.xml
      - name: Upload coverage reports to Codecov (optionally)
        if: ${{ inputs.use-codecov }}
        run: |
          # Replace `linux` below with the appropriate OS
          # Options are `alpine`, `linux`, `macos`, `windows`
          curl -Os https://cli.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov --verbose upload-process --fail-on-error -t ${{ secrets.codecov_token }} -n 'service'-${{ github.run_id }} -f coverage.xml